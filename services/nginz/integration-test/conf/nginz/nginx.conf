worker_processes 4;
worker_rlimit_nofile 1024;
include pid.conf; # for easy overriding

# nb. start up errors (eg. misconfiguration) may still end up in /$(LOG_PATH)/error.log
error_log stderr warn;

events {
  worker_connections 1024;
  multi_accept off;
}

http {
  #
  # Some temporary paths (by default, will use the `prefix` path given when starting nginx)
  #

  client_body_temp_path /tmp;
  fastcgi_temp_path /tmp;
  proxy_temp_path /tmp;
  scgi_temp_path /tmp;
  uwsgi_temp_path /tmp;

  #
  # Sockets
  #

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  #
  # Timeouts
  #

  client_body_timeout 60;
  client_header_timeout 60;
  keepalive_timeout 75;
  send_timeout 60;

  ignore_invalid_headers off;

  types_hash_max_size 2048;

  server_names_hash_bucket_size 64;
  server_name_in_redirect off;

  large_client_header_buffers 4 8k;


  #
  # Security
  #

  server_tokens off;

  #
  # Logging
  #
  # Note sanitized_request:
  # We allow passing access_token as query parameter for e.g. websockets
  # However we do not want to log access tokens.
  #

  log_format custom_zeta '$remote_addr - $remote_user [$time_local] "$sanitized_request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" - $connection $request_time $upstream_response_time $upstream_cache_status $zauth_user $zauth_connection $request_id $proxy_protocol_addr';
  access_log /dev/stdout custom_zeta;

  #
  # Monitoring
  #
  vhost_traffic_status_zone;

  #
  # Gzip
  #

  gzip on;
  gzip_disable msie6;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_min_length 1024;
  gzip_types 'text/plain text/css application/json text/xml';

  #
  #  Proxied Upstream Services
  #

  include upstreams;

  #
  # Mapping for websocket connections
  #

  map $http_upgrade $connection_upgrade {
      websocket upgrade;
      default   '';
  }



  #
  # Locations
  #

  server {
    include integration.conf;

    # self-signed certificates generated using wire-server/hack/bin/gen-certs.sh
    ssl_certificate integration-leaf.pem;
    ssl_certificate_key integration-leaf-key.pem;

    ssl_verify_client on;
    ssl_client_certificate integration-ca.pem;
    ######## TLS/SSL block end ##############

    zauth_keystore resources/zauth/pubkeys.txt;
    zauth_acl conf/nginz/zauth_acl.txt;
    # needs to be kept in sync with services/brig/test/resources/oauth/ed25519.jwk
    oauth_pub_key resources/oauth/ed25519_public.jwk;

    location /status {
        set $sanitized_request $request;
        zauth off;
        return 200;
    }

    location /i/status {
        set $sanitized_request $request;
        zauth off;
        return 200;
    }

    location /vts {
        set $sanitized_request $request;
        zauth off;
        vhost_traffic_status_display;
        vhost_traffic_status_display_format html;
    }

    #
    # Service Routing
    #

    # Federator endpoints: expose the federatorExternal port (Inward service)
    location /federation {
        set $sanitized_request $request;
        zauth off;

        proxy_set_header "X-SSL-Certificate" $ssl_client_escaped_cert;
        proxy_pass http://federator_external;

        # FUTUREWORK(federation): are any other settings
        # (e.g. timeouts, body size, buffers, headers,...)
        # useful/recommended/important-for-security?)
    }

    # Brig Endpoints
    #
    ## brig unauthenticated endpoints

    location ~* ^(/v[0-9]+)?/api/swagger-ui {
        include common_response_no_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/api/swagger.json {
        include common_response_no_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/api-internal/swagger-ui {
        include common_response_no_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/api-internal/swagger.json {
        include common_response_no_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/api-federation/swagger-ui {
        include common_response_no_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/api-federation/swagger.json {
        include common_response_no_zauth.conf;
        proxy_pass http://brig;
    }

    location /register {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /access {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /activate {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /login {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/teams/invitations/accept$ {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/teams/invitations/([^/]*)$ {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /verification-code/send {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    ## brig authenticated endpoints

    location ~* ^(/v[0-9]+)?/self$ {
      include common_response_with_zauth.conf;
      oauth_scope self;
      proxy_pass http://brig;
    }

    location /users {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /list-users {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /search {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /list-connections {
        include common_response_with_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^/teams/([^/]+)/search$ {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location ~* /teams/([^/]+)/services {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /connections {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/clients {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/mls/key-packages {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /properties {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /calls/config {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location ~* ^/teams/([^/]*)/size$ {
        include common_response_with_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/system/settings/unauthorized$ {
        include common_response_no_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^(/v[0-9]+)?/system/settings$ {
        include common_response_with_zauth.conf;
        proxy_pass http://brig;
    }

    location ~* ^/oauth/clients/([^/]*)$ {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location ~* ^/oauth/authorization/codes$ {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /oauth/token {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /oauth/revoke {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /oauth/applications {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    # Cargohold Endpoints

    location /assets {
      include common_response_with_zauth.conf;
      proxy_pass http://cargohold;
    }

    location /bot/assets {
      include common_response_with_zauth.conf;
      proxy_pass http://cargohold;
    }

    location ~* ^(/v[0-9]+)?/provider/assets$ {
      include common_response_with_zauth.conf;
      proxy_pass http://cargohold;
    }

    # Galley Endpoints

    location ~* ^(/v[0-9]+)?/legalhold/conversations/(.*)$ {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^(/v[0-9]+)?/conversations$ {
      include common_response_with_zauth.conf;
      oauth_scope conversations;
      proxy_pass http://galley;
    }

    location ~* ^(/v[0-9]+)?/conversations/([^/]*)/code {
      include common_response_with_zauth.conf;
      oauth_scope conversations_code;
      proxy_pass http://galley;
    }

    location ~* ^(/v[0-9]+)?/conversations.* {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/conversations/([^/]*)/otr/messages {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/conversations/([^/]*)/([^/]*)/proteus/messages {
        include common_response_with_zauth.conf;
        proxy_pass http://galley;
    }

    location ~* ^/conversations/([^/]*)/([^/]*)/protocol {
        include common_response_with_zauth.conf;
        proxy_pass http://galley;
    }

    location /broadcast {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location /bot/conversation {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location /bot/messages {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams$ {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)$ {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/members(.*) {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/conversations(.*) {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/features {
        include common_response_with_zauth.conf;
        proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/features/([^/]*) {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^(/v[0-9]+)?/feature-configs$  {
      include common_response_with_zauth.conf;
      oauth_scope feature_configs;
      proxy_pass http://galley;
    }

    location ~* ^(/v[0-9]+)?/feature-configs(.*)  {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/legalhold(.*) {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/members/csv$ {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location /mls/welcome {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location /mls/messages {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^(/v[0-9]+)?/mls/commit-bundles {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^(/v[0-9]+)?/mls/public-keys {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    # Gundeck Endpoints

    location /push {
      include common_response_with_zauth.conf;
      proxy_pass http://gundeck;
    }

    location /presences {
      include common_response_with_zauth.conf;
      proxy_pass http://gundeck;
    }

    location ~* ^(/v[0-9]+)?/notifications$ {
      include common_response_with_zauth.conf;
      proxy_pass http://gundeck;
    }

    # Proxy Endpoints

    location /proxy {
      include common_response_with_zauth.conf;
      proxy_pass http://proxy;
    }

    # Cannon Endpoints

    location /await {
      include common_response_with_zauth.conf;
      proxy_pass http://cannon;

      proxy_set_header   Upgrade        $http_upgrade;
      proxy_set_header   Connection     $connection_upgrade;
      proxy_read_timeout 1h;
    }

    # Spar Endpoints

    location /sso {
      include common_response_no_zauth.conf;
      proxy_pass http://spar;
    }

    location /identity-providers {
      include common_response_with_zauth.conf;
      proxy_pass http://spar;
    }
  }
}
