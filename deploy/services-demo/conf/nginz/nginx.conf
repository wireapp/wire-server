worker_processes 4;
worker_rlimit_nofile 1024;
pid /tmp/nginz.pid;

# nb. start up errors (eg. misconfiguration) may still end up in /$(LOG_PATH)/error.log
error_log stderr warn;

events {
  worker_connections 1024;
  multi_accept off;
}

http {
  #
  # Some temporary paths (by default, will use the `prefix` path given when starting nginx)
  #

  client_body_temp_path /tmp;
  fastcgi_temp_path /tmp;
  proxy_temp_path /tmp;
  scgi_temp_path /tmp;
  uwsgi_temp_path /tmp;

  #
  # Sockets
  #

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  #
  # Timeouts
  #

  client_body_timeout 60;
  client_header_timeout 60;
  keepalive_timeout 75;
  send_timeout 60;

  ignore_invalid_headers off;

  types_hash_max_size 2048;

  server_names_hash_bucket_size 64;
  server_name_in_redirect off;

  large_client_header_buffers 4 8k;


  #
  # Security
  #

  server_tokens off;

  #
  # Logging
  #

  log_format custom_zeta '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" - $connection $request_time $upstream_response_time $upstream_cache_status $zauth_user $zauth_connection $request_id $proxy_protocol_addr';
  access_log /dev/stdout custom_zeta;

  #
  # Monitoring
  #
  vhost_traffic_status_zone;

  #
  # Gzip
  #

  gzip on;
  gzip_disable msie6;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_min_length 1024;
  gzip_types 'text/plain text/css application/json text/xml';

  #
  #  Proxied Upstream Services
  #

  include upstreams;

  #
  # Mapping for websocket connections
  #

  map $http_upgrade $connection_upgrade {
      websocket upgrade;
      default   '';
  }



  #
  # Locations
  #

  server {
    listen 8080;
    listen 8081;

    zauth_keystore resources/zauth/pubkeys.txt;
    zauth_acl conf/nginz/zauth_acl.txt;

    location /status {
        zauth off;
        return 200;
    }

    location /vts {
        zauth off;
        vhost_traffic_status_display;
        vhost_traffic_status_display_format html;
    }

    #
    # Service Routing
    #

    # Brig Endpoints

    rewrite ^/api-docs/users  /users/api-docs?base_url=http://127.0.0.1:8080/ break;

    location /register {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /access {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /activate {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /login {
      include common_response_no_zauth.conf;
      proxy_pass http://brig;
    }

    location /self {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /users {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /search {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /connections {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    location /clients {
      include common_response_with_zauth.conf;
      proxy_pass http://brig;
    }

    # Cargohold Endpoints

    rewrite ^/api-docs/assets  /assets/api-docs?base_url=http://127.0.0.1:8080/ break;

    location /assets {
      include common_response_with_zauth.conf;
      proxy_pass http://cargohold;
    }

    location /bot/assets {
      include common_response_with_zauth.conf;
      proxy_pass http://cargohold;
    }

    location /provider/assets {
      include common_response_with_zauth.conf;
      proxy_pass http://cargohold;
    }

    # Galley Endpoints

    rewrite ^/api-docs/conversations  /conversations/api-docs?base_url=http://127.0.0.1:8080/ break;

    location /conversations {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/conversations/([^/]*)/otr/messages {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location /broadcast/otr/messages {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location /bot/conversation {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location /bot/messages {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams$ {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)$ {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/members(.*) {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    location ~* ^/teams/([^/]*)/conversations(.*) {
      include common_response_with_zauth.conf;
      proxy_pass http://galley;
    }

    # Gundeck Endpoints

    rewrite ^/api-docs/push  /push/api-docs?base_url=http://127.0.0.1:8080/ break;

    location /push {
      include common_response_with_zauth.conf;
      proxy_pass http://gundeck;
    }

    location /presences {
      include common_response_with_zauth.conf;
      proxy_pass http://gundeck;
    }

    location /notifications {
      include common_response_with_zauth.conf;
      proxy_pass http://gundeck;
    }

    # Proxy Endpoints

    rewrite ^/api-docs/proxy  /proxy/api-docs?base_url=http://127.0.0.1:8080/ break;

    location /proxy {
      include common_response_with_zauth.conf;
      proxy_pass http://proxy;
    }

    # Cannon Endpoints

    rewrite ^/api-docs/await  /await/api-docs?base_url=http://127.0.0.1:8080/ break;

    location /await {
      include common_response_with_zauth.conf;
      proxy_pass http://cannon;

      proxy_set_header   Upgrade        $http_upgrade;
      proxy_set_header   Connection     $connection_upgrade;
      proxy_read_timeout 1h;
    }
  
    # 
    # Swagger Resource Listing
    #

    location /api-docs {
        default_type application/json;
        root conf/nginz/zwagger-ui;
        index resources.json;
        if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Methods' "GET, POST, PUT, DELETE, OPTIONS";
              add_header 'Access-Control-Allow-Headers' "$http_access_control_request_headers, DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type";
              add_header 'Content-Type' 'text/plain; charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
        }
        more_set_headers 'Access-Control-Allow-Origin: $http_origin';
    }

    # Swagger UI

    location /swagger-ui {
        zauth  off;
        gzip   off;
        alias conf/nginz/zwagger-ui;
        types {
            application/javascript  js;
            text/css                css;
            text/html               html;
            image/png               png;
        }
    }
  }
}
