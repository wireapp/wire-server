brig:
  host: brig
  port: 8082

cassandra:
  endpoint:
    host: cassandra
    port: 9042
  keyspace: brig_test

elasticsearch:
  url: http://elasticsearch:9200
  index: directory_test

cargohold:
  host: cargohold
  port: 8084

galley:
  host: galley
  port: 8085

gundeck:
  host: gundeck
  port: 8086

aws:
  prekeyTable: integration-brig-prekeys
  sqsEndpoint: http://sqs:4568 # https://sqs.eu-west-1.amazonaws.com
  dynamoDBEndpoint: http://dynamodb:8000 # https://dynamodb.eu-west-1.amazonaws.com

internalEvents:
  queueType: sqs
  queueName: integration-brig-events-internal

emailSMS:
  email:
    smtpEndpoint:
      host: smtp
      port: 25
    smtpConnType: plain
  general:
    templateDir: resources/templates
    emailSender: backend-demo@mail.wiredemo.example.com
    smsSender: "<insert-sender-number-here>"
    templateBranding:
      brand: Wire
      brandUrl: https://wire.com
      brandLabelUrl: wire.com # This is the text in the label for the above URL
      brandLogoUrl: https://wire.com/p/img/email/logo-email-black.png
      brandService: Wire Service Provider
      copyright: Â© WIRE SWISS GmbH
      misuse: misuse@wire.com
      legal: https://wire.com/legal/
      forgot: https://wire.com/forgot/
      support: https://support.wire.com/

  user:
    activationUrl: http://brig:8080/activate?key=${key}&code=${code}
    smsActivationUrl: http://brig:8080/v/${code}
    passwordResetUrl: http://brig:8080/password-reset/${key}?code=${code}
    invitationUrl: http://brig:8080/register?invitation_code=${code}
    deletionUrl: http://brig:8080/users/delete?key=${key}&code=${code}

  provider:
    homeUrl: https://provider.localhost/
    providerActivationUrl: http://brig:8080/provider/activate?key=${key}&code=${code}
    approvalUrl: http://brig:8080/provider/approve?key=${key}&code=${code}
    approvalTo: success@simulator.amazonses.com
    providerPwResetUrl: http://brig:8080/provider/password-reset?key=${key}&code=${code}

  team:
    tInvitationUrl: http://brig:8080/register?team=${team}&team_code=${code}
    tActivationUrl: http://brig:8080/register?team=${team}&team_code=${code}
    tCreatorWelcomeUrl: http://brig:8080/creator-welcome-website
    tMemberWelcomeUrl: http://brig:8080/member-welcome-website

zauth:
  privateKeys: resources/zauth/privkeys.txt
  publicKeys: resources/zauth/pubkeys.txt
  authSettings:
    keyIndex: 1
    userTokenTimeout: 4838400    # 56 days
    sessionTokenTimeout: 604800  # 7 days
    accessTokenTimeout: 900      # 15 minutes
    providerTokenTimeout: 604800 # 7 days
    legalHoldUserTokenTimeout: 4838400    # 56 days
    legalHoldSessionTokenTimeout: 604800  # 7 days
    legalHoldAccessTokenTimeout: 900 # 15 minutes

turn:
  serversV2: resources/turn/servers-v2.txt
  servers: resources/turn/servers.txt
  secret: resources/turn/secret.txt
  # ^ TODO: This secret should be the same used by the TURN servers
  configTTL: 3600
  tokenTTL: 21600

optSettings:
  setTwilio: resources/twilio-credentials.yaml
  setNexmo: resources/nexmo-credentials.yaml
  setActivationTimeout: 1209600     # 1 day
  setTeamInvitationTimeout: 1814400 # 21 days
  setUserMaxConnections: 1000
  setCookieInsecure: false
  setUserCookieRenewAge: 1209600 # 14 days
  setUserCookieLimit: 32
  setUserCookieThrottle:
    stdDev: 3000      # 50 minutes
    retryAfter: 86400 # 1 day
  setRichInfoLimit: 5000  # should be in sync with Spar
  setDefaultTemplateLocale: en
  setDefaultUserLocale: en
  setMaxTeamSize: 128
  setMaxConvSize: 128
  setEmailVisibility: visible_to_self
  setFederationDomain: example.com
  setNonceTtlSecs: 300 # 5 minutes
  setDpopMaxSkewSecs: 1
  setDpopTokenExpirationTimeSecs: 300 # 5 minutes

logLevel: Debug
logNetStrings: false
