{{- if .Values.tls.enabled }}
{{- if .Values.tls.certManager.enabled }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: coturn-letsencrypt-cert
  namespace: {{ .Release.Namespace }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  issuerRef:
    name: coturn-letsencrypt-issuer
    kind: {{ .Values.tls.certManager.issuer.kind }}
  usages:
    - server auth
  duration: 2160h # 90 days, ignored by LE
  renewBefore: 360h # 15 days
  isCA: false
  secretName: coturn-tls

  privateKey:
    algorithm: ECDSA
    size: 384
    encoding: PKCS1
    rotationPolicy: Always

  {{- if eq (len .Values.tls.certManager.dnsNames) 0 }}
  {{- fail "List of DNS names for LetsEncrypt certificate is empty" }}
  {{- else }}
  dnsNames:
  {{- with .Values.tls.certManager.dnsNames }}
    - {{ . | quote }}
  {{- end }}
  {{- end }}
{{- else }}
apiVersion: v1
kind: Secret
metadata:
  name: coturn-tls
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: kubernetes.io/tls
data:
  {{- if and .Values.secrets.tls.cert .Values.secrets.tls.key }}
  tls.crt: {{ .Values.secrets.tls.cert | b64enc | quote }}
  tls.key: {{ .Values.secrets.tls.key | b64enc | quote }}
  {{- else }}
  {{- fail "TLS enabled, but cert and key are not provided in secrets.tls.key and secrets.tls.cert" }}
  {{- end }}
{{- end }}
{{- end }}
