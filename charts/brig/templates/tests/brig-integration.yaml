apiVersion: v1
kind: Service
metadata:
  name: "brig-integration"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    app: brig-integration
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: brig-integration
    release: {{ .Release.Name }}
---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-brig-integration"
  annotations:
    "helm.sh/hook": test
  labels:
    app: brig-integration
    release: {{ .Release.Name }}
spec:
  volumes:
    - name: "brig-integration"
      configMap:
        name: "brig-integration"
    # Needed in order to read some values from the brig service
    - name: "brig-config"
      configMap:
        name: "brig"
    - name: "brig-secrets"
      secret:
        secretName: "brig"
    - name: "turn-servers"
      configMap:
        name: "turn"
    - name: "brig-integration-secrets"
      secret:
        secretName: "brig-integration"
    {{- if eq (include "configureElasticSearchCa" .Values.config) "true" }}
    - name: elasticsearch-ca
      secret:
        secretName: {{ include "elasticsearchTlsSecretName" .Values.config }}
    {{- end}}
    {{- if eq (include "useCassandraTLS" .Values.config) "true" }}
    - name: "brig-cassandra"
      secret:
        secretName: {{ (include "tlsSecretRef" .Values.config | fromYaml).name }}
    {{- end}}
    {{- if .Values.config.rabbitmq.tlsCaSecretRef }}
    - name: "rabbitmq-ca"
      secret:
        secretName: {{ .Values.config.rabbitmq.tlsCaSecretRef.name }}
    {{- end }}
  containers:
  - name: integration
    image: "{{ .Values.image.repository }}-integration:{{ .Values.image.tag }}"
        {{- if eq (include "includeSecurityContext" .) "true" }}
    securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 6 }}
        {{- end }}
    # TODO: Add TURN tests once we have an actual way to test it
    # The brig-integration tests mutate the turn settings files before tests
    # to get certain behaviour. This doesn't work on kubernetes because brig
    # is a different pod than brig-integration and they can't both mouht the
    # same file-system.
    # The other test, "user.auth.cookies.limit", is skipped as it is flaky.
    # This is tracked in https://github.com/zinfra/backend-issues/issues/1150.
    command:
    - /bin/bash
    - -c
    - |
      set -euo pipefail

      if brig-integration --xml "$TEST_XML" --pattern "!/turn/ && !/user.auth.cookies.limit/"; then
        exit_code=$?
      else
        exit_code=$?
      fi

      {{- if .Values.tests.config.uploadXml }}
      # In case a different S3 compliant storage is used to upload test result.
      if ! [[ -z "${UPLOAD_XML_AWS_ACCESS_KEY_ID+x}" ]]; then
        export AWS_ACCESS_KEY_ID="$UPLOAD_XML_AWS_ACCESS_KEY_ID"
        export AWS_SECRET_ACCESS_KEY="$UPLOAD_XML_AWS_SECRET_ACCESS_KEY"
      fi

      # The `|| echo ..` ensures that the test isn't seen as failed even if the upload fails.
      ts=$(date --utc '+%Y%m%d%H%M%S%N')
      uploadUrl="$UPLOAD_XML_S3_BASE_URL/brig-integration/${ts}.xml"
      echo "Uploading xml result to: $uploadUrl"
      aws s3 cp "$TEST_XML" "$uploadUrl" || echo "failed to upload result"
      {{- end }}

      exit $exit_code
    volumeMounts:
    - name: "brig-integration"
      mountPath: "/etc/wire/integration"
    - name: "brig-config"
      mountPath: "/etc/wire/brig/conf"
    - name: "brig-secrets"
      mountPath: "/etc/wire/brig/secrets"
    - name: "turn-servers"
      mountPath: "/etc/wire/brig/turn"
    - name: "brig-integration-secrets"
      # TODO: Maybe we should put integration yaml also under
      #       `/integration/conf` by default? Note that currently
      #       brig-integration cannot read config files from
      #       non-default locations
      #       (see corresp. TODO in galley.)
      mountPath: "/etc/wire/integration-secrets"
    {{- if eq (include "configureElasticSearchCa" .Values.config) "true" }}
    - name: elasticsearch-ca
      mountPath: "/etc/wire/brig/elasticsearch-ca"
    {{- end}}
    {{- if eq (include "useCassandraTLS" .Values.config) "true" }}
    - name: "brig-cassandra"
      mountPath: "/etc/wire/brig/cassandra"
    {{- end }}
    {{- if .Values.config.rabbitmq.tlsCaSecretRef }}
    - name: "rabbitmq-ca"
      mountPath: "/etc/wire/brig/rabbitmq-ca/"
    {{- end }}

    env:
    # these dummy values are necessary for Amazonka's "Discover"
    - name: AWS_ACCESS_KEY_ID
      value: "dummy"
    - name: AWS_SECRET_ACCESS_KEY
      value: "dummy"
    - name: AWS_REGION
      value: "eu-west-1"
    {{- if .Values.config.enableFederation }}
    - name: RABBITMQ_USERNAME
      value: "guest"
    - name: RABBITMQ_PASSWORD
      value: "guest"
    {{- end }}
    - name: TEST_XML
      value: /tmp/result.xml
    {{- if .Values.tests.config.uploadXml }}
    - name: UPLOAD_XML_S3_BASE_URL
      value: {{ .Values.tests.config.uploadXml.baseUrl }}
    {{- if .Values.tests.secrets.uploadXmlAwsAccessKeyId }}
    - name: UPLOAD_XML_AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: brig-integration
          key: uploadXmlAwsAccessKeyId
    - name: UPLOAD_XML_AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: brig-integration
          key: uploadXmlAwsSecretAccessKey
    {{- end }}
    {{- end }}
    resources:
      requests:
        memory: "512Mi"
        cpu: "2"
  restartPolicy: Never
