replicaCount: 3
image:
  repository: quay.io/wire/brig
  tag: do-not-use
service:
  externalPort: 8080
  internalPort: 8080
resources:
  requests:
    memory: "200Mi"
    cpu: "100m"
  limits:
    memory: "512Mi"
metrics:
  serviceMonitor:
    enabled: false
# This is not supported for production use, only here for testing:
# preStop:
#  exec:
#   command: ["sh", "-c", "curl http://acme.example"]
config:
  logLevel: Info
  logFormat: StructuredJSON
  logNetStrings: false
  cassandra:
    host: aws-cassandra
#   To enable TLS provide a CA:
#   tlsCa: <CA in PEM format (can be self-signed)>
#
#   Or refer to an existing secret (containing the CA):
#   tlsCaSecretRef:
#     name: <secret-name>
#     key: <ca-attribute>

  elasticsearch:
    scheme: http
    host: elasticsearch-client
    port: 9200
    index: directory
    insecureSkipVerifyTls: false
#   To configure custom TLS CA, please provide one of these:
#   tlsCa: <CA in PEM format (can be self-signed)>
#
#   Or refer to an existing secret (containing the CA):
#   tlsCaSecretRef:
#     name: <secret-name>
#     key: <ca-attribute>
    additionalWriteScheme: http
    # additionalWriteHost: <host>
    additionalWritePort: 9200
    # additionalWriteIndex: <index>
    additionalInsecureSkipVerifyTls: false
#   To configure custom TLS CA, please provide one of these:
#   additionalTlsCa: <CA in PEM format (can be self-signed)>
#
#   Or refer to an existing secret (containing the CA):
#   additionalTlsCaSecretRef:
#     name: <secret-name>
#     key: <ca-attribute>
  aws:
    region: "eu-west-1"
    sesEndpoint: https://email.eu-west-1.amazonaws.com
    sqsEndpoint: https://sqs.eu-west-1.amazonaws.com
    # dynamoDBEndpoint: https://dynamodb.eu-west-1.amazonaws.com
  # -- If set to false,  'dynamoDBEndpoint' _must_ be set.
  randomPrekeys: true
  useSES: true
  multiSFT:
    enabled: false # keep multiSFT default in sync with sft chart's multiSFT.enabled
  enableFederation: false # keep in sync with background-worker, cargohold and galley charts' config.enableFederation as well as wire-server chart's tags.federation
  # Not used if enableFederation is false
  rabbitmq:
    host: rabbitmq
    port: 5672
    vHost: /
    enableTls: false
    insecureSkipVerifyTls: false
    # tlsCaSecretRef:
    #   name: <secret-name>
    #   key: <ca-attribute>
  emailSMS:
    general:
      templateBranding:
        brand: Wire
        brandUrl: https://wire.com
        brandLabelUrl: wire.com
        brandLogoUrl: https://wire.com/p/img/email/logo-email-black.png
        brandService: Wire Service Provider
        copyright: Â© WIRE SWISS GmbH
        misuse: misuse@wire.com
        legal: https://wire.com/legal/
        forgot: https://wire.com/forgot/
        support: https://support.wire.com/
  authSettings:
    keyIndex: 1
    userTokenTimeout: 4838400
    sessionTokenTimeout: 86400
    accessTokenTimeout: 900
    providerTokenTimeout: 900
    legalholdUserTokenTimeout: 4838400
    legalholdAccessTokenTimeout: 900
  # sft:
  #   sftBaseDomain: sft.wire.example.com
  #   sftSRVServiceName: sft
  #   sftDiscoveryIntervalSeconds: 10
  #   sftListLength: 20
  #   sftToken:
  #     ttl: 120
  #     secret: /etc/wire/brig/secrets/sftTokenSecret # this is the default path for secret.sftTokenSecret
  optSettings:
    setActivationTimeout: 1209600
    setTeamInvitationTimeout: 1814400
    setUserMaxConnections: 1000
    setCookieInsecure: false
    setUserCookieRenewAge: 1209600
    setUserCookieLimit: 32
    setUserCookieThrottle:
      stdDev: 3000
      retryAfter: 86400
    setRichInfoLimit: 5000
    setDefaultUserLocale: en
    setMaxTeamSize: 10000
    setMaxConvSize: 500
    # Allowed values: https://github.com/wireapp/wire-server/blob/0126651a25aabc0c5589edc2b1988bb06550a03a/services/brig/src/Brig/Options.hs#L304-L306
    # Description: https://github.com/wireapp/wire-server/blob/0126651a25aabc0c5589edc2b1988bb06550a03a/services/brig/src/Brig/Options.hs#L290-L299
    setEmailVisibility: visible_to_self
    setPropertyMaxKeyLen: 1024
    setPropertyMaxValueLen: 524288
    setDeleteThrottleMillis: 100
    # Allow search within same team only. Default: false
    # setSearchSameTeamOnly: false|true
    # Set max number of user clients. Default: 7
    # setUserMaxPermClients: <int>
    # Customer extensions.  If this is not part of your contract with wire, use at your own risk!
    # Details: https://github.com/wireapp/wire-server/blob/3d5684023c54fe580ab27c11d7dae8f19a29ddbc/services/brig/src/Brig/Options.hs#L465-L503
    # setCustomerExtensions:
    #   domainsBlockedForRegistration:
    #   - wire.example
    set2FACodeGenerationDelaySecs: 300 # 5 minutes
    setNonceTtlSecs: 300 # 5 minutes
    setDpopMaxSkewSecs: 1
    setDpopTokenExpirationTimeSecs: 300 # 5 minutes
    setOAuthAuthCodeExpirationTimeSecs: 300 # 5 minutes
    setOAuthAccessTokenExpirationTimeSecs: 900 # 15 minutes
    setOAuthRefreshTokenExpirationTimeSecs: 14515200 # 24 weeks
    setOAuthEnabled: true
    setOAuthMaxActiveRefreshTokens: 10
    # Disable one ore more API versions. Please make sure the configuration value is the same in all these charts:
    # brig, cannon, cargohold, galley, gundeck, proxy, spar.
    setDisabledAPIVersions: [ development ]
    setFederationStrategy: allowNone
    setFederationDomainConfigsUpdateFreq: 10
    # Options for Argon2id version 19
    setPasswordHashingOptions:
      iterations: 1
      parallelism: 32
      memory: 180224 # 176 MiB
  smtp:
    passwordFile: /etc/wire/brig/secrets/smtp-password.txt
  proxy: {}

turnStatic:
  v1:
  - turn:localhost:3478
  v2:
  - turn:localhost:3478
  - turn:localhost:3478?transport=tcp

turn:
  serversSource: files # files | dns
  # baseDomain: turn.wire.example # Must be configured if serversSource is dns
  discoveryIntervalSeconds: 10 # Used only if serversSource is dns

serviceAccount:
  # When setting this to 'false', either make sure that a service account named
  # 'brig' exists or change the 'name' field to 'default'
  create: true
  name: brig
  annotations: {}
  automountServiceAccountToken: true

secrets: {}

podSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
tests:
  config: {}
    # uploadXml:
    #   baseUrl: s3://bucket/path/

  secrets:
    # uploadXmlAwsAccessKeyId: <key-id>
    # uploadXmlAwsSecretAccessKey: <secret>

    # These "secrets" are only used in tests and are therefore safe to be stored unencrypted
    providerPrivateKey: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpAIBAAKCAQEAu+Kg/PHHU3atXrUbKnw0G06FliXcNt3lMwl2os5twEDcPPFw
        /feGiAKymxp+7JqZDrseS5D9THGrW+OQRIPHWvUBdiLfGrZqJO223DB6D8K2Su/o
        dmnjZJ2z23rhXoEArTplu+Dg9K+c2LVeXTKVVPOaOzgtAB21XKRiQ4ermqgi3/nj
        r03rXyq/qNkuNd6tNcg+HAfGxfGvvCSYBfiSbUKr/BeArYRcjzr/h5m1In6fG/if
        9GEI6m8dxHT9JbY53wiksowy6ajCuqskIFg87X883H+LA/d6X5CTiPv1VMxXdBUi
        GPuC9IT/6CNQ1/LFt0P37ax58+LGYlaFo7lanQIDAQABAoIBAQC0doVy7zgpLsBv
        Sz0AnbPe1pjxEwRlntRbJSfSULySALqJvs5s4adSVGUBHX3z/LousAP1SRpCppuU
        8wrLBFgjQVlaAzyQB84EEl+lNtrG8Jrvd2es9R/4sJDkqy50+yuPN5wnzWPFIjhg
        3jP5CHDu29y0LMzsY5yjkzDe9B0bueXEZVU+guRjhpwHHKOFeAr9J9bugFUwgeAr
        jF0TztzFAb0fsUNPiQAho1J5PyjSVgItaPfAPv/p30ROG+rz+Rd5NSSvBC5F+yOo
        azb84zzwCg/knAfIz7SOMRrmBh2qhGZFZ8gXdq65UaYv+cpT/qo28mpAT2vOkyeD
        aPZp0ysBAoGBAOQROoDipe/5BTHBcXYuUE1qa4RIj3wgql5I8igXr4K6ppYBmaOg
        DL2rrnqD86chv0P4l/XOomKFwYhVGXtqRkeYnk6mQXwNVkgqcGbY5PSNyMg5+ekq
        jSOOPHGzzTWKzYuUDUpB/Lf6jbTv8fq2GYW3ZYiqQ/xiugOvglZrTE7NAoGBANLl
        irjByfxAWGhzCrDx0x5MBpsetadI9wUA8u1BDdymsRg73FDn3z7NipVUAMDXMGVj
        lqbCRlHESO2yP4GaPEA4FM+MbTZSuhAYV+SY07mEPLHF64/nJas83Zp91r5rhaqJ
        L9rWCl3KJ5OUnr3YizCnHIW72FxjwtpjxHJLupsRAoGAGIbhy8qUHeKh9F/hW9xP
        NoQjW+6Rv7+jktA1eqpRbbW1BJzXcQldVWiJMxPNuEOg1iZ98SlvvTi1P3wnaWZc
        eIapP7wRfs3QYaJuxCC/Pq2g0ieqALFazGAXkALOJtvujvw1Ea9XBlIjuzmyxEuh
        Iwg+Gxx0g0f6yTquwax4YGECgYEAnpAK3qKFNO1ECzQDo8oNy0ep59MNDPtlDhQK
        katJus5xdCD9oq7TQKrVOTTxZAvmzTQ1PqfuqueDVYOhD9Zg2n/P1cRlEGTek99Z
        pfvppB/yak6+r3FA9yBKFS/r1zuMQg3nNweav62QV/tz5pT7AdeDMGFtaPlwtTYx
        qyWY5aECgYBPySbPccNj+xxQzxcti2y/UXjC04RgOA/Hm1D0exa0vBqS9uxlOdG8
        F47rKenpBrslvdfTVsCDB1xyP2ebWVzp6EqMycw6OLPxgo3fBfZ4pi6P+rByh0Cc
        Lhfh+ET0CPnKCxtop3lUrn4ZvqchS0j3J+M0pDuqoWF5hfKxFhkEIw==
        -----END RSA PRIVATE KEY-----
    providerPublicKey: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu+Kg/PHHU3atXrUbKnw0
        G06FliXcNt3lMwl2os5twEDcPPFw/feGiAKymxp+7JqZDrseS5D9THGrW+OQRIPH
        WvUBdiLfGrZqJO223DB6D8K2Su/odmnjZJ2z23rhXoEArTplu+Dg9K+c2LVeXTKV
        VPOaOzgtAB21XKRiQ4ermqgi3/njr03rXyq/qNkuNd6tNcg+HAfGxfGvvCSYBfiS
        bUKr/BeArYRcjzr/h5m1In6fG/if9GEI6m8dxHT9JbY53wiksowy6ajCuqskIFg8
        7X883H+LA/d6X5CTiPv1VMxXdBUiGPuC9IT/6CNQ1/LFt0P37ax58+LGYlaFo7la
        nQIDAQAB
        -----END PUBLIC KEY-----
    providerPublicCert: |
        -----BEGIN CERTIFICATE-----
        MIIDdjCCAl4CCQCm0AiwERR/qjANBgkqhkiG9w0BAQsFADB9MQswCQYDVQQGEwJE
        RTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGDAWBgNVBAoMD1dp
        cmUgU3dpc3MgR21iSDERMA8GA1UEAwwId2lyZS5jb20xHzAdBgkqhkiG9w0BCQEW
        EGJhY2tlbmRAd2lyZS5jb20wHhcNMTYwODA0MTMxNDQyWhcNMzYwNzMwMTMxNDQy
        WjB9MQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJs
        aW4xGDAWBgNVBAoMD1dpcmUgU3dpc3MgR21iSDERMA8GA1UEAwwId2lyZS5jb20x
        HzAdBgkqhkiG9w0BCQEWEGJhY2tlbmRAd2lyZS5jb20wggEiMA0GCSqGSIb3DQEB
        AQUAA4IBDwAwggEKAoIBAQC74qD88cdTdq1etRsqfDQbToWWJdw23eUzCXaizm3A
        QNw88XD994aIArKbGn7smpkOux5LkP1Mcatb45BEg8da9QF2It8atmok7bbcMHoP
        wrZK7+h2aeNknbPbeuFegQCtOmW74OD0r5zYtV5dMpVU85o7OC0AHbVcpGJDh6ua
        qCLf+eOvTetfKr+o2S413q01yD4cB8bF8a+8JJgF+JJtQqv8F4CthFyPOv+HmbUi
        fp8b+J/0YQjqbx3EdP0ltjnfCKSyjDLpqMK6qyQgWDztfzzcf4sD93pfkJOI+/VU
        zFd0FSIY+4L0hP/oI1DX8sW3Q/ftrHnz4sZiVoWjuVqdAgMBAAEwDQYJKoZIhvcN
        AQELBQADggEBAEuwlHElIGR56KVC1dJiw238mDGjMfQzSP76Wi4zWS6/zZwJUuog
        BkC+vacfju8UAMvL+vdqkjOVUHor84/2wuq0qn91AjOITD7tRAZB+XLXxsikKv/v
        OXE3A/lCiNi882NegPyXAfFPp/71CIiTQZps1eQkAvhD5t5WiFYPESxDlvEJrHFY
        XP4+pp8fL8YPS7iZNIq+z+P8yVIw+B/Hs0ht7wFIYN0xACbU8m9+Rs08JMoT16c+
        hZMuK3BWD3fzkQVfW0yMwz6fWRXB483ZmekGkgndOTDoJQMdJXZxHpI3t2FcxQYj
        T45GXxRd18neXtuYa/OoAw9UQFDN5XfXN0g=
        -----END CERTIFICATE-----
