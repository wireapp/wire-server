apiVersion: v1
kind: ConfigMap
metadata:
  name: backoffice
data:
  stern.yaml: |
    logNetStrings: True # log using netstrings encoding:
                        # http://cr.yp.to/proto/netstrings.txt
    logLevel: {{ .Values.config.logLevel }}
    stern:
      host: 0.0.0.0
      port: 8081
    # Cannot listen on the same port as the frontend
    brig:
      host: brig
      port: 8080
    galley:
      host: galley
      port: 8080
    gundeck:
      host: gundeck
      port: 8080
    # Both ibis and galeb should be made optional for
    # installations where these services are not available
    galeb:
      host: galeb
      port: 8080
    ibis:
      host: ibis
      port: 8080
  nginx.conf: |
    worker_processes 1;
    worker_rlimit_nofile 1024;
    pid /tmp/nginx.pid;

     events {
        worker_connections 1024;
        multi_accept off;
    }

     http {
        #
        # Sockets
        #

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;

        #
        # Timeouts
        #

        client_body_timeout 60s;
        client_header_timeout 60s;
        keepalive_timeout 30s;
        send_timeout 60s;

        #
        # Mapping for websocket connections
        #

        map $http_upgrade $connection_upgrade {
            websocket upgrade;
            default   '';
        }

        #
        # Body
        #

        client_max_body_size 16M;

        #
        # Headers
        #

        ignore_invalid_headers off;

        server_tokens off;
        server_names_hash_bucket_size 64;
        server_name_in_redirect off;
        types_hash_max_size 2048;

        large_client_header_buffers 4 8k;

        #
        # MIME
        #

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        #
        # Logging
        #

        access_log /dev/stdout;
        error_log  stderr;

        #
        # Gzip
        #

        gzip on;
        gzip_disable msie6;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        #
        # SSL
        #

         add_header Strict-Transport-Security max-age=31536000;

         map $scheme $server_https {
            default off;
            https on;
        }

        ssl_session_cache builtin:1000 shared:SSL:10m;
        ssl_session_timeout 5m;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

        server {
          listen {{ .Values.service.internalPort }};

           # Backoffice code at /var/www
          location / {
              # NOTE: nginx's root is defined at compile time! This means that these roots
              # depend on the values at the time of compilation for nginx, namely --conf-path
              # and --prefix. If you don't use _full_ paths as root, they get resolved depending
              # those prefixes... they really need to fix this! So we just assume that these
              # paths can be created on any filesystem...
              root /var/www/swagger-ui;
              index index.html;
          }

          # resources.json is needed by the backoffice app
          location /api-docs {
              # This asssumes the default location for the backoffice!
              root /var/www/swagger-ui;
              index resources.json;
          }

          # The liveness/healthiness depends on stern
          location /i/status {
              proxy_pass         http://localhost:8081;
              proxy_http_version 1.1;
          }

          rewrite ^/api-docs/stern /stern/api-docs?base_url={{ .Values.baseUrl }}/api break;

          # This path is used by swagger to fetch the docs from the service
          location /stern {
              proxy_pass         http://localhost:8081;
              proxy_http_version 1.1;
          }

          # All others requests get proxied to stern, without the api prefix (which was added in the base_url above)
          location ~ ^/api/(.*)$ {
              proxy_pass         http://localhost:8081/$1$is_args$query_string;
              proxy_http_version 1.1;
          }
      }
    }
