apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ template "fullname" . }}
      containers:
      - name: fake-aws-sqs
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.service.httpPort }}
          name: http
          protocol: TCP
        command:
        - /sbin/tini
        - --
        - /opt/elasticmq/bin/elasticmq-native-server
        - -Dconfig.file=/config/elasticmq.conf
        - -Dlogback.configurationFile=/opt/logback.xml
        volumeMounts:
        - name: storage
          mountPath: /data
        - name: config
          mountPath: /config
        resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - emptyDir: {}
          name: "storage"
        - name: config
          configMap:
            name: {{ template "fullname" . }}
