apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginz
  labels:
    app: nginz
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: {{ .Values.replicaCount | mul 2 }}
  selector:
    matchLabels:
      app: nginz
  template:
    metadata:
      labels:
        app: nginz
        release: {{ .Release.Name }}
      annotations:
        # An annotation of the configmap checksum ensures changes to the configmap cause a redeployment upon `helm upgrade`
        checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/swagger-ui-configmap: {{ include (print .Template.BasePath "/swagger-ui-configmap.yaml") . | sha256sum }}
        checksum/swagger-resources-configmap: {{ include (print .Template.BasePath "/swagger-resources-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
        fluentbit.io/parser-nginz: nginz
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
      - name: nginz-disco
        image: "{{ .Values.images.nginzDisco.repository }}:{{ .Values.images.nginzDisco.tag }}"
        volumeMounts:
        - name: config
          mountPath: /etc/wire/nginz/conf
          readOnly: true
        - name: upstreams
          mountPath: /etc/wire/nginz/upstreams
          readOnly: false
      - name: nginz
        image: "{{ .Values.images.nginz.repository }}:{{ .Values.images.nginz.tag }}"
        volumeMounts:
        - name: secrets
          mountPath: /etc/wire/nginz/secrets
          readOnly: true
        - name: config
          mountPath: /etc/wire/nginz/conf
          readOnly: true
        - name: upstreams
          mountPath: /etc/wire/nginz/upstreams
          readOnly: true
        - name: swagger-ui
          mountPath: /opt/zwagger-ui
          readOnly: true
        - name: swagger-resources
          mountPath: {{ .Values.nginx_conf.swagger_root }}/api-docs
        ports:
        - name: http
          containerPort: {{ .Values.config.http.httpPort }}
        - name: tcp
          containerPort: {{ .Values.config.ws.wsPort }}
        readinessProbe:
          httpGet:
            path: /status
            port: {{ .Values.config.http.httpPort }}
            scheme: HTTP
        livenessProbe:
          initialDelaySeconds: 30
          timeoutSeconds: 1
          httpGet:
            path: /status
            port: {{ .Values.config.http.httpPort }}
            scheme: HTTP
        resources:
{{ toYaml .Values.resources | indent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: nginz
      - name: secrets
        secret:
          secretName: nginz
      - name: upstreams
        emptyDir: {}
      - name: swagger-ui
        configMap:
          name: nginz-swagger-ui
      - name: swagger-resources
        configMap:
          name: nginz-swagger-resources
