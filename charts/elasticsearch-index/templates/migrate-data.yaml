apiVersion: batch/v1
kind: Job
metadata:
  name: brig-index-migrate-data
  labels:
    app: elasticsearch-index-migrate-data
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      labels:
        app: elasticsearch-index-migrate-data
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: OnFailure
      containers:
        # Reindexes all users when a new migration is detected.
        - name: brig-index
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
          args:
            - migrate-data
            - --elasticsearch-server
            - "{{ .Values.elasticsearch.scheme }}://{{ required "missing elasticsearch-index.elasticsearch.host!" .Values.elasticsearch.host }}:{{ .Values.elasticsearch.port }}"
            {{- if hasKey .Values.secrets "elasticsearch" }}
            - --elasticsearch-credentials
            - "/etc/wire/elasticsearch-index/secrets/elasticsearch-credentials.yaml"
            {{- end }}
            - --elasticsearch-index
            - "{{ or (.Values.elasticsearch.additionalWriteIndex) (.Values.elasticsearch.index) }}"
            - --cassandra-host
            - "{{ required "missing elasticsearch-index.cassandra.host!" .Values.cassandra.host }}"
            - --cassandra-port
            - "{{ required "missing elasticsearch-index.cassandra.port!" .Values.cassandra.port }}"
            - --cassandra-keyspace
            - "{{ required "missing elasticsearch-index.cassandra.keyspace!" .Values.cassandra.keyspace }}"
            - --galley-host
            - "{{ required "missing elasticsearch-index.galley.host!" .Values.galley.host }}"
            - --galley-port
            - "{{ required "missing elasticsearch-index.galley.port!" .Values.galley.port }}"
            {{- if eq (include "useCassandraTLS" .Values) "true" }}
            - --cassandra-ca-cert
            - /certs/cassandra/{{- include "cassandraTlsSecretKey" .Values }}
            {{- end }}
            {{- if eq (include "configureElasticsearchCa" .Values) "true" }}
            - --elasticsearch-ca-cert
            - /certs/elasticsearch/{{- include "elasticsearchTlsSecretKey" .Values}}
            {{- end }}
            {{- if .Values.elasticsearch.insecureSkipTlsVerify }}
            - --elasticsearch-insecure-skip-tls-verify
            {{- end }}
          volumeMounts:
          {{- if hasKey .Values.secrets "elasticsearch" }}
            - name: "elasticsearch-index-secrets"
              mountPath: "/etc/wire/elasticsearch-index/secrets"
          {{- end }}
          {{- if eq (include "useCassandraTLS" .Values) "true" }}
            - name: elasticsearch-index-migrate-cassandra-client-ca
              mountPath: "/certs/cassandra"
          {{- end }}
          {{- if eq (include "configureElasticsearchCa" .Values) "true" }}
            - name: elasticsearch-ca
              mountPath: "/certs/elasticsearch"
          {{- end }}
      volumes:
        {{- if hasKey .Values.secrets "elasticsearch" }}
        - name: elasticsearch-index-secrets
          secret:
            secretName: elasticsearch-index
        {{- end }}
        {{- if eq (include "useCassandraTLS" .Values) "true" }}
        - name: elasticsearch-index-migrate-cassandra-client-ca
          secret:
            secretName: {{ include "cassandraTlsSecretName" .Values }}
        {{- end }}
        {{- if eq (include "configureElasticsearchCa" .Values) "true" }}
        - name: elasticsearch-ca
          secret:
            secretName: {{ include "elasticsearchTlsSecretName" .Values }}
        {{- end }}
