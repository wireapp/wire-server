{{- $apiIsStable := eq (include "ingress.isStable" .) "true" -}}
{{- $ingressFieldNotAnnotation := eq (include "ingress.FieldNotAnnotation" .) "true" -}}
{{- $ingressSupportsPathType := eq (include "ingress.supportsPathType" .) "true" -}}
apiVersion: {{ include "ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "nginx-ingress-services.getIngressName" . | quote }}
  annotations:
    {{- if not $ingressFieldNotAnnotation }}
    kubernetes.io/ingress.class: "{{ .Values.config.ingressClass }}"
    {{- end }}
    {{ if .Values.config.renderCSPInIngress }}
    {{ if not (contains .Values.config.ingressClass "nginx") }}
        {{ fail "In ingress CSP header setting only works with a 'nginx' controller. (Rename it to 'nginx-*' if it is one.)" }}
    {{ end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $CSP "connect-src 'self' blob: data: https://*.giphy.com https://{{ .Values.config.dns.https }}";
      {{if .Values.websockets.enabled}}
      set $CSP "${CSP} wss://{{ .Values.config.dns.ssl }}";
      {{end}}
      set $CSP "${CSP} https://*.{{ .Values.config.dns.base }};";
      set $CSP "${CSP} default-src 'self';";
      set $CSP "${CSP} font-src 'self' data:;";
      set $CSP "${CSP} frame-src https://*.soundcloud.com https://*.spotify.com https://*.vimeo.com https://*.youtube-nocookie.com;";
      set $CSP "${CSP} img-src 'self' blob: data: https://*.giphy.com https://*.{{ .Values.config.dns.base }};";
      set $CSP "${CSP} manifest-src 'self';";
      set $CSP "${CSP} media-src 'self' blob: data:;";
      set $CSP "${CSP} object-src 'none';";
      set $CSP "${CSP} script-src 'self' 'unsafe-eval' https://*.{{ required "Need a 'base' domain for CSP headers." .Values.config.dns.base }}; ";
      set $CSP "${CSP} style-src 'self' 'unsafe-inline';";
      set $CSP "${CSP} worker-src 'self' blob:;";
      set $CSP "${CSP} base-uri 'self';";
      set $CSP "${CSP} form-action 'self';";
      set $CSP "${CSP} frame-ancestors 'self';";
      set $CSP "${CSP} script-src-attr 'none';";
      set $CSP "${CSP} upgrade-insecure-requests";
      more_set_headers "content-security-policy: $CSP";
    {{ end }}
spec:
  {{- if $ingressFieldNotAnnotation }}
  ingressClassName: "{{ .Values.config.ingressClass }}"
  {{- end }}
  # This assumes you have created the given cert (see secret.yaml)
  # https://github.com/kubernetes/ingress-nginx/blob/master/docs/examples/PREREQUISITES.md#tls-certificates
  tls:
  - hosts:
      - {{ .Values.config.dns.https }}
{{- if .Values.websockets.enabled }}
      - {{ .Values.config.dns.ssl }}
{{- end }}
{{- if .Values.webapp.enabled }}
      - {{ .Values.config.dns.webapp }}
{{- end }}
{{- if .Values.fakeS3.enabled }}
      - {{ .Values.config.dns.fakeS3 }}
{{- end }}
{{- if .Values.teamSettings.enabled }}
      - {{ .Values.config.dns.teamSettings }}
{{- end }}
{{- if .Values.accountPages.enabled }}
      - {{ .Values.config.dns.accountPages }}
{{- end }}
    secretName: {{ include "nginx-ingress-services.getCertificateSecretName" . | quote }}
  rules:
    - host: {{ .Values.config.dns.https }}
      http:
        paths:
          - path: /
            {{- if $ingressSupportsPathType }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if $apiIsStable }}
              service:
                name: nginz
                port:
                  name: http
              {{- else }}
              serviceName: nginz
              servicePort: http
              {{- end }}
{{- if .Values.websockets.enabled }}
    - host: {{ .Values.config.dns.ssl }}
      http:
        paths:
          - path: /
            {{- if $ingressSupportsPathType }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if $apiIsStable }}
              service:
                name: nginz
                port:
                  name: ws
              {{- else }}
              serviceName: nginz
              servicePort: ws
              {{- end }}
{{- end }}
{{- if .Values.webapp.enabled }}
    - host: {{ .Values.config.dns.webapp }}
      http:
        paths:
          - path: /
            {{- if $ingressSupportsPathType }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if $apiIsStable }}
              service:
                name: webapp-http
                port:
                  number: {{ .Values.service.webapp.externalPort }}
              {{- else }}
              serviceName: webapp-http
              servicePort: {{ .Values.service.webapp.externalPort }}
              {{- end }}
{{- end }}
{{- if .Values.fakeS3.enabled }}
    - host: {{ .Values.config.dns.fakeS3 }}
      http:
        paths:
          - path: /
            {{- if $ingressSupportsPathType }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if $apiIsStable }}
              service:
                name: {{ .Values.service.s3.serviceName }}
                port:
                  number: {{ .Values.service.s3.externalPort }}
              {{- else }}
              serviceName: {{ .Values.service.s3.serviceName }}
              servicePort: {{ .Values.service.s3.externalPort }}
              {{- end }}
{{- end }}
{{- if .Values.teamSettings.enabled }}
    - host: {{ .Values.config.dns.teamSettings }}
      http:
        paths:
          - path: /
            {{- if $ingressSupportsPathType }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if $apiIsStable }}
              service:
                name: team-settings-http
                port:
                  number: {{ .Values.service.teamSettings.externalPort }}
              {{- else }}
              serviceName: team-settings-http
              servicePort: {{ .Values.service.teamSettings.externalPort }}
              {{- end }}
{{- end }}
{{- if .Values.accountPages.enabled }}
    - host: {{ .Values.config.dns.accountPages }}
      http:
        paths:
          - path: /
            {{- if $ingressSupportsPathType }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if $apiIsStable }}
              service:
                name: account-pages-http
                port:
                  number: {{ .Values.service.accountPages.externalPort }}
              {{- else }}
              serviceName: account-pages-http
              servicePort: {{ .Values.service.accountPages.externalPort }}
              {{- end }}
{{- end }}
