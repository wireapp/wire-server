#!/usr/bin/env python3

import subprocess
from subprocess import PIPE
from itertools import zip_longest
import re

def run_cqlsh(container, expr):
     p = subprocess.run(["docker", "exec", "-i", container, '/usr/bin/cqlsh', '-e', expr], stdout=PIPE, check=True).stdout.decode('utf8').strip()
     return p

def transpose(a):
    return [x for col in zip_longest(*a, fillvalue='') for x in col]

def main():
    container = subprocess.run(["docker", "ps", "--filter=name=cassandra", "--format={{.ID}}"], stdout=PIPE, check=True).stdout.decode('utf8').rstrip()
    s = run_cqlsh(container, 'DESCRIBE keyspaces;')

    ks = []
    for line in s.splitlines():
        ks.append(re.split('\s+', line))

    keyspaces = transpose(ks)
    print("-- automatically generated with `make git-add-cassandra-schema`\n")
    for keyspace in keyspaces:
        if keyspace.endswith('_test'):
            s = run_cqlsh(container, f'DESCRIBE keyspace {keyspace}')
            print(s.replace('CREATE TABLE galley_test.member_client','-- NOTE: this table is unused. It was replaced by mls_group_member_client\nCREATE TABLE galley_test.member_client'))
            print()

if __name__ == '__main__':
    main()
